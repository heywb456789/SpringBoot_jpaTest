spring.profiles.active=local
server.port = 8000
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
spring.devtools.livereload.enabled=true

#spring boot 1.x version
#server.jsp-servlet.init-parameters.development=true

#Jsp와 같이 사용할 경우 뷰 구분을 위해 컨트롤러가 뷰 이름을 반환할때 thymeleaf/ 로 시작하면 타임리프로 처리하도록 view-names 지정
spring.thymeleaf.view-names=thymeleaf/*
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html


# thymeleaf를 사용하다 수정사항이 생길때 수정을하면 재시작하여야 하는데 이를 무시하구 부라우저 새로고침으로 수정사항 반영을 하기위해 caher=false 설정
#spring.thymeleaf.cache = false
#spring.thymeleaf.check-template-location=true

#log4jdbc
spring.datasource.driverClassName = net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url = jdbc:log4jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8&serverTimezone=UTC

#mariaDb
#spring.datasource.driverClassName = org.mariadb.jdbc.Driver
#spring.datasource.url = jdbc:mariadb://localhost:3306/test?characterEncoding=UTF-8&serverTimezone=UTC

#mysql
#spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
#spring.datasource.url = jdbc:mysql://localhost:3306/test?characterEncoding=UTF-8&serverTimezone=UTC


#스키마계정
spring.datasource.username = heywb457
#비밀번호
spring.datasource.password = qlalfqjsgh1@

#mybatis 매핑 type을 짧게 쓰기 위한 설정
#mapper.xml 에서 resultType을 지정할때 com.boot.test.vo.testVo 대신 TestVo로 쌉가능
mybatis.type-aliases-package=com.boot.test.vo

#mapper.xml 위치 지정
#**은 하위 폴더 레벨에 상관없이 모든 경로를 뜻하며, *는 아무 이름이나 와도 된다는것을 뜻한다.

mybatis.mapper-locations = mybatis/**/*.xml

#스프링 부트 LogBack 관련
#1) classpath(resources디렉토리 밑)에 logback-spring.xml파일이 있으면 설정파일을 읽어간다.
#2) logback-spring.xml파일이 없다면 .yml(.properties)파일의 설정을 읽어간다.
#3) logback-spring.xml파일과 .yml(.properties)파일이 동시에 있으면 .yml(.properties) 설정 파일을 적용 후 xml파일이 적용된다.

# 로그 레벨

#1) ERROR : 요청을 처리하는 중 오류가 발생한 경우 표시한다.
#2) WARN  : 처리 가능한 문제, 향후 시스템 에러의 원인이 될 수 있는 경고성 메시지를 나타낸다.
#3) INFO  : 상태변경과 같은 정보성 로그를 표시한다.
#4) DEBUG : 프로그램을 디버깅하기 위한 정보를 표시한다.
#5) TRACE : 추적 레벨은 Debug보다 훨씬 상세한 정보를 나타낸다.

#TRACE  <  DEBUG  <  INFO  <  WARN  <  ERROR
#ex) info 설정시 info , warn error 만 출력이 된다 .

logging.level.root=info
logging.level.com.boot.test =info
logging.level.com.boot.test.controller=debug

#JPA 설정
#Dialect 설정
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MariaDBDialect

#하이버네이트가 실행하는 모든 sql문을 콘솔로 출력해준다
spring.jpa.properties.hibernate.show_sql = true

#콘솔에 출력되는 Jpa 실행 쿼리를 가독성있게 표현한다.
spring.jpa.properties.hibernate.format_sql=true

#디버깅이 용이하도록 Sql 문 이외에 추가적인 정보를 출력해 준다.
spring.jpa.properties.hibernate.use_sql_comments =true
